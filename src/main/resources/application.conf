ktor {
    deployment {
        port = 8080
        port = ${?PORT}
    }
    application {
        id = pleiepengesoknad-api
        modules = [ no.nav.helse.AppKt.pleiepengesoknadapi ]
    }
}

no.nav.security.jwt {
  issuers = [
      {
         issuer_name = tokendings
         discoveryurl = ${?TOKEN_X_WELL_KNOWN_URL}
         accepted_audience = ${?TOKEN_X_CLIENT_ID}
      },
      {
        issuer_name = login-service-v2
        discoveryurl = ${?LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
        accepted_audience = ${?LOGINSERVICE_IDPORTEN_AUDIENCE}
        cookie_name = selvbetjening-idtoken
      }
  ]
}

nav {
    cors {
        addresses = ""
        addresses = ${?CORS_ADDRESSES}
    }
    gateways {
        k9_oppslag_url = "",
        k9_oppslag_url = ${?K9_OPPSLAG_REGISTER_URL}
        k9_mellomlagring_url = ""
        k9_mellomlagring_url = ${?K9_MELLOMLAGRING_SERVICE_DISCOVERY},
        sif_innsyn_api_url = ${?SIF_INNSYN_API_URL},
        k9_brukerdialog_cache_url = ${?K9_BRUKERDIALOG_CACHE_URL},
    }
    auth {
        clients = [
            {
            alias = "azure-v2"
            client_id = ""
            client_id = ${?AZURE_APP_CLIENT_ID}
            private_key_jwk = ""
            private_key_jwk = ${?AZURE_APP_JWK}
            discovery_endpoint = ""
            discovery_endpoint = ${?AZURE_APP_WELL_KNOWN_URL}
            },
            {
                alias = "tokenx"
                client_id = ${?TOKEN_X_CLIENT_ID}
                private_key_jwk = ${?TOKEN_X_PRIVATE_JWK}
                discovery_endpoint = ${?TOKEN_X_WELL_KNOWN_URL}
            }
        ]
        scopes = {
            k9-mellomlagring-scope = ""
            k9-mellomlagring-scope = ${?K9_MELLOMLAGRING_CLIENT_ID}
            k9-brukerdialog-cache-tokenx-audience = ${?K9_BRUKERDIALOG_CACHE_TOKENX_AUDIENCE}
        }
    }
    authorization {
        cookie_name = ""
        cookie_name = ${?COOKIE_NAME}
    }

    mellomlagring {
        s√∏knad_tid_timer = "72"
        endringsmelding_tid_timer = "24"
    }
    cache{
        barn{
            expiry_in_minutes = "30"
            expiry_in_minutes = ${?CACHE_EXPIRY_IN_MINUTES}
            max_size = "500"
            max_size = ${?CACHE_MAX_SIZE}
        }
        innsending{
          expiry_in_minutes = "1"
        }
    }
    kafka {
          bootstrap_servers = ${?KAFKA_BROKERS}
          truststore_path = ""
          truststore_path = ${?KAFKA_TRUSTSTORE_PATH}
          credstore_password = ""
          credstore_password = ${?KAFKA_CREDSTORE_PASSWORD}
          keystore_path = ""
          keystore_path = ${?KAFKA_KEYSTORE_PATH}
      }
}
